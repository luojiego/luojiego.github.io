<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据 on Roger&#39;s Blog</title>
    <link>http://localhost:1313/tags/%E6%95%B0%E6%8D%AE/</link>
    <description>Recent content in 数据 on Roger&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Dec 2024 06:45:15 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E6%95%B0%E6%8D%AE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于休闲合成游戏的数据同步方案实践</title>
      <link>http://localhost:1313/posts/prediction-rollback-with-merge-games/</link>
      <pubDate>Fri, 27 Dec 2024 06:45:15 +0800</pubDate>
      <guid>http://localhost:1313/posts/prediction-rollback-with-merge-games/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;本文将以一个休闲合成类游戏的实践经验为切入点，探讨游戏开发中的数据同步方案。在这个合成游戏中，玩家需要在地图上移动和合成物体，涉及复杂的验证逻辑和数据同步问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;一合成游戏的核心玩法&#34;&gt;一、合成游戏的核心玩法&lt;/h2&gt;&#xA;&lt;p&gt;在这款休闲合成游戏中，玩家主要进行两种操作：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;移动物体：在地图格子间移动不同大小的物体&lt;/li&gt;&#xA;&lt;li&gt;合成物体：将多个相同物体合成为新的物体，可能触发额外产出&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这些看似简单的操作，实际上涉及复杂的验证逻辑和状态同步问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;二同步方案的选择&#34;&gt;二、同步方案的选择&lt;/h2&gt;&#xA;&lt;h3 id=&#34;21-我们的选择预测回滚&#34;&gt;2.1 我们的选择：预测回滚&lt;/h3&gt;&#xA;&lt;p&gt;在开发这款游戏时，我们选择了预测回滚(Prediction Rollback)同步方案。主要考虑因素是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;需要保证游戏操作的流畅性&lt;/li&gt;&#xA;&lt;li&gt;对网络延迟有一定的容忍度&lt;/li&gt;&#xA;&lt;li&gt;需要严格的服务器验证&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;22-方案工作流程&#34;&gt;2.2 方案工作流程&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;客户端不等待服务器响应，直接执行操作&lt;/li&gt;&#xA;&lt;li&gt;同时将操作发送给服务器进行验证&lt;/li&gt;&#xA;&lt;li&gt;如果服务器检测到不合法操作，客户端回滚到前一状态&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;23-其他可选方案分析&#34;&gt;2.3 其他可选方案分析&lt;/h3&gt;&#xA;&lt;p&gt;虽然我们选择了预测回滚方案，但其他同步方案也有其适用场景：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;帧同步：适用于竞技类游戏，但对我们的休闲游戏来说过于严格&lt;/li&gt;&#xA;&lt;li&gt;状态同步：带宽消耗较大，不适合频繁的小操作&lt;/li&gt;&#xA;&lt;li&gt;事件同步：不能很好地处理实时操作需求&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;三核心玩法的同步实现&#34;&gt;三、核心玩法的同步实现&lt;/h2&gt;&#xA;&lt;h3 id=&#34;31-移动操作的验证流程&#34;&gt;3.1 移动操作的验证流程&lt;/h3&gt;&#xA;&lt;p&gt;移动操作看似简单，但需要验证多个条件：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;源格子验证&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;确认A格子存在可移动物体&lt;/li&gt;&#xA;&lt;li&gt;验证物体属性和状态&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;目标格子验证&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;检查B格子是否可移动&lt;/li&gt;&#xA;&lt;li&gt;验证格子是否已解锁&lt;/li&gt;&#xA;&lt;li&gt;考虑物体尺寸（1×1, 1×2, 2×1, 2×2, 3×3等）&lt;/li&gt;&#xA;&lt;li&gt;确保目标区域无占用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;32-合成操作的复杂性&#34;&gt;3.2 合成操作的复杂性&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;基础验证&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;验证参与合成的格子状态&lt;/li&gt;&#xA;&lt;li&gt;确认物体的位置连续性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;合成规则验证&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;支持多种合成模式（三合一、五合二等）&lt;/li&gt;&#xA;&lt;li&gt;验证合成数量的合法性&lt;/li&gt;&#xA;&lt;li&gt;确认物品ID转换的正确性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;特殊情况处理&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;合成后新物体的位置处理&lt;/li&gt;&#xA;&lt;li&gt;额外产出的合法性验证（如XXX01→XXX02的转换）&lt;/li&gt;&#xA;&lt;li&gt;稀有物品掉落的验证&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;四实践中的经验总结&#34;&gt;四、实践中的经验总结&lt;/h2&gt;&#xA;&lt;h3 id=&#34;41-遇到的问题及解决方案&#34;&gt;4.1 遇到的问题及解决方案&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;玩家体验问题&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;问题：网络延迟导致回滚频繁&lt;/li&gt;&#xA;&lt;li&gt;解决：优化客户端预判断，减少无效请求&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;数据一致性问题&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;问题：长期运行可能导致状态偏差&lt;/li&gt;&#xA;&lt;li&gt;解决：定期完整状态同步&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;性能优化问题&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;问题：频繁的验证请求导致服务器压力大&lt;/li&gt;&#xA;&lt;li&gt;解决：实现请求批处理和节流控制&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;42-优化建议&#34;&gt;4.2 优化建议&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;性能优化&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
